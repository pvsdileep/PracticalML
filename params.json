{"name":"PracticalML","tagline":"PracticalML - Submission","body":"---\r\ntitle: \"PracticalML\"\r\nauthor: \"Dileep Pasumarthi\"\r\ndate: \"Saturday, June 20, 2015\"\r\noutput: html_document\r\n---\r\n\r\n## Problem Statement\r\n\r\nUsing devices such as Jawbone Up, Nike FuelBand, and Fitbit it is now possible to collect a large amount of data about personal activity relatively inexpensively. These type of devices are part of the quantified self movement - a group of enthusiasts who take measurements about themselves regularly to improve their health, to find patterns in their behavior, or because they are tech geeks. One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways. More information is available from the website here: http://groupware.les.inf.puc-rio.br/har (see the section on the Weight Lifting Exercise Dataset). \r\n\r\n## Approach\r\n\r\nBuilding ML model included following steps\r\n\r\n1. **Feature Selection**\r\n\r\n    + Removing insignificant columns\r\n      Few columns like *user_name*, *raw_timestamp_part_1*, *new_window* etc don't add any value to the data set. These columns which are less significant are removed(code below).\r\n      \r\n      `\r\n      training <- subset(training,select = -c(X,user_name,raw_timestamp_part_1,raw_timestamp_part_2,cvtd_timestamp,new_window,num_window))\r\n      `\r\n      \r\n    + Removing columns in which 90% of data is NA or empty\r\n      \r\n    \r\n      `\r\n      training <- training[,colSums(is.na(training)) <= nrow(training)*.9]\r\n      `\r\n      `\r\n      training <- training[,colSums(training != \"\") >= nrow(training)*.9]\r\n      `\r\n      \r\n    After this process data set has 53 features.\r\n    \r\n2. **Validation Set**\r\n\r\n    + Created validation set with 10% of training set.\r\n      \r\n      `\r\n        inTrain <- createDataPartition(training$classe,p=0.9,list=FALSE)\r\n      `\r\n      `\r\n        valid <- training[-inTrain,]\r\n      `\r\n      `\r\n        train <- training[inTrain,]\r\n      `\r\n    + I have also created another validation set with 10% of training set(helps in cross verification of results)\r\n    \r\n3. **Parallelize the process**\r\n\r\n    + Training the model is computationally intensive process and it takes lot of time. Enabling parallel processing helps in reducing training time.\r\n      `\r\n        library(doParallel)\r\n      `\r\n      `\r\n        cl <- makeCluster(detectCores())\r\n      `\r\n      `\r\n        registerDoParallel(cl)\r\n      `\r\n  \r\n4. **PreProcessing and Training the model**\r\n\r\n    + I have used **repeatedcv** with 3 folds and 5 repeatitions for better performance. \r\n    \r\n      `\r\n      tc <- trainControl(\"repeatedcv\", number=3, repeats=5, classProbs=TRUE, savePred=T) \r\n      `\r\n      \r\n    + Built a model using **Random Forest** method with above **trainControl** parameters. Training data is preProcessed with **center & scale** method\r\n    \r\n      `\r\n      modFitTC <- train(train1$classe ~.,data = train1,method=\"rf\",trControl = tc, preProcess = c(\"center\",\"scale\"))\r\n      `\r\n  \r\n5. **Results**\r\n\r\n    + Following are the results on validation set\r\n    ```{r}\r\n    read.csv(file=\"result.csv\",header = TRUE)\r\n    ```\r\n    \r\n6. **Variable Importance**\r\n    \r\n    + Plot variable importance to understand which feature is contributing in prediciton. Number of features can be trimmed according to the order of importance for better performance. If image doesn't appear below, [click HERE](https://github.com/pvsdileep/PracticalML/blob/master/varImp.png)\r\n    \r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}